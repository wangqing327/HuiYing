plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    //apply plugin: 'mtj-circle-plugin'
}


android {
    compileSdkVersion 31

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "com.example.liuguangtv"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 2
        versionName "1.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            // 过滤so
            abiFilters "armeabi-v7a", "x86", "x86_64"//,'arm64-v8a'
            //, "mips"
            //'armeabi'

        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kapt {
        arguments {
            arg("rxhttp_package",'rxhttp')  //非必须，指定RxHttp类包名
            //传入你依赖的rxjava版本，可传入rxjava2、rxjava3，依赖RxJava时必须
            arg("rxhttp_rxjava", '3.1.1')
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
//腾讯tbs
    sourceSets{
        main{
            jniLibs.srcDirs = ['libs']
        }
    }

}
/*MtjCirclePluginConfig {
    // 设置appkey，必须设置，否则插件使用无效
    appkey = '1442e656f0'
    // 设置debug 开关，默认关闭，如果需要查看日志则打开开关（true），建议正式版关闭以避免影响性能
    debug = true
    // 默认启动此插件，如果开发者不需要可以禁用（false）
    enabled = true
}*/
dependencies {
    implementation fileTree('dir':'libs','include':['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.android.car.ui:car-ui-lib:+'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0-alpha01'

    implementation 'com.github.liujingxing.rxhttp:rxhttp:2.8.3'
    // ksp/kapt/annotationProcessor 选其一
    kapt 'com.github.liujingxing.rxhttp:rxhttp-compiler:2.8.3'
    // implementation 'com.ljx.rxlife:rxlife-coroutine:2.0.1' //管理协程生命周期，页面销毁，关闭请求
    // Rxjava3，使用asXxx方法时必须
    implementation 'io.reactivex.rxjava3:rxjava:3.1.1'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'com.github.liujingxing.rxlife:rxlife-rxjava3:2.2.1'
    //RxJava3, Automatic close request
    //Glide
    implementation 'com.squareup.okhttp3:okhttp:4.10.0-RC1'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    //Glide注解器依赖
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.github.bumptech.glide:annotations:4.11.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.11.0@aar'

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'

    //api 'com.tencent.tbs:tbssdk:44176'
    implementation 'com.teprinciple:updateapputils:2.3.0'
    //Room依赖
    def room_version = "2.4.1"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    //百度统计
   // implementation 'com.baidu.mobstat:mtj-sdk:latest.integration'
    implementation 'com.baidu.mobstat:mtj-sdk-circle:latest.integration'
    //圆形图片框
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    //下拉刷新控件
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

}